{"version":3,"sources":["webpack:///./src/templates/notifications-post.js","webpack:///(webpack)/buildin/module.js"],"names":["NotificationsPostTemplate","content","contentComponent","description","tags","attachments","title","helmet","bodyIsMarkdown","PostContent","Content","className","source","length","style","marginTop","map","item","index","key","href","url","name","tag","to","kebabCase","NotificationsPost","post","data","markdownRemark","html","HTMLContent","frontmatter","titleTemplate","pageQuery","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i"],"mappings":"4FAAA,qNASaA,EAA4B,SAAC,GASnC,IARLC,EAQI,EARJA,QACAC,EAOI,EAPJA,iBACAC,EAMI,EANJA,YACAC,EAKI,EALJA,KACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,OAEI,IADJC,sBACI,SACEC,EAAcP,GAAoBQ,IAExC,OACE,6BAASC,UAAU,WAChBJ,GAAU,GACX,yBAAKI,UAAU,qBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,sDACXL,GAEH,2BAAIH,GACHK,EACC,kBAAC,IAAD,CAAeI,OAAQX,IAEvB,kBAACQ,EAAD,CAAaR,QAASA,IAEvBI,GAAeA,EAAYQ,OAC1B,yBAAKC,MAAO,CAAEC,UAAU,SACtB,mCACA,wBAAIJ,UAAU,WACXN,EAAYW,KAAI,SAACC,EAAMC,GAAP,OACf,wBAAIC,IAAKD,GACP,uBAAGE,KAAMH,EAAKI,KAAMJ,EAAKK,YAK/B,KACHlB,GAAQA,EAAKS,OACZ,yBAAKC,MAAO,CAAEC,UAAU,SACtB,kCACA,wBAAIJ,UAAU,WACXP,EAAKY,KAAI,SAACO,GAAD,OACR,wBAAIJ,IAAKI,EAAG,OACV,kBAAC,IAAD,CAAMC,GAAE,SAAWC,oBAAUF,GAArB,KAA+BA,SAK7C,UAgDDG,UAhCW,SAAC,GAAc,IACfC,EADc,EAAXC,KACnBC,eAER,OACE,kBAAC,IAAD,KACE,kBAAC7B,EAAD,CACEC,QAAS0B,EAAKG,KACd5B,iBAAkB6B,IAClB5B,YAAawB,EAAKK,YAAY7B,YAC9BI,OACE,kBAAC,IAAD,CAAQ0B,cAAc,iBACpB,kCAAWN,EAAKK,YAAY1B,OAC5B,0BACEgB,KAAK,cACLrB,QAAO,GAAK0B,EAAKK,YAAY7B,eAInCC,KAAMuB,EAAKK,YAAY5B,KACvBC,YAAasB,EAAKK,YAAY3B,YAC9BC,MAAOqB,EAAKK,YAAY1B,UAczB,IAAM4B,EAAS,c,mBC7GtBC,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOK,WAAUL,EAAOK,SAAW,IACxCC,OAAOC,eAAeP,EAAQ,SAAU,CACvCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOU,KAGhBJ,OAAOC,eAAeP,EAAQ,KAAM,CACnCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOW,KAGhBX,EAAOE,gBAAkB,GAEnBF","file":"component---src-templates-notifications-post-js-8300324340adee46d3e2.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { kebabCase } from \"lodash\";\nimport { Helmet } from \"react-helmet\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Content, { HTMLContent } from \"../components/Content\";\nimport ReactMarkdown from \"react-markdown\";\n\nexport const NotificationsPostTemplate = ({\n  content,\n  contentComponent,\n  description,\n  tags,\n  attachments,\n  title,\n  helmet,\n  bodyIsMarkdown = false,\n}) => {\n  const PostContent = contentComponent || Content;\n\n  return (\n    <section className=\"section\">\n      {helmet || \"\"}\n      <div className=\"container content\">\n        <div className=\"columns\">\n          <div className=\"column is-10 is-offset-1\">\n            <h1 className=\"title is-size-2 has-text-weight-bold is-bold-light\">\n              {title}\n            </h1>\n            <p>{description}</p>\n            {bodyIsMarkdown ? (\n              <ReactMarkdown source={content} />\n            ) : (\n              <PostContent content={content} />\n            )}\n            {attachments && attachments.length ? (\n              <div style={{ marginTop: `2rem` }}>\n                <h4>附件:</h4>\n                <ul className=\"taglist\">\n                  {attachments.map((item, index) => (\n                    <li key={index}>\n                      <a href={item.url}>{item.name}</a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ) : null}\n            {tags && tags.length ? (\n              <div style={{ marginTop: `4rem` }}>\n                <h4>标签</h4>\n                <ul className=\"taglist\">\n                  {tags.map((tag) => (\n                    <li key={tag + `tag`}>\n                      <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nNotificationsPostTemplate.propTypes = {\n  content: PropTypes.node.isRequired,\n  contentComponent: PropTypes.func,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  helmet: PropTypes.object,\n};\n\nconst NotificationsPost = ({ data }) => {\n  const { markdownRemark: post } = data;\n\n  return (\n    <Layout>\n      <NotificationsPostTemplate\n        content={post.html}\n        contentComponent={HTMLContent}\n        description={post.frontmatter.description}\n        helmet={\n          <Helmet titleTemplate=\"%s | Training\">\n            <title>{`${post.frontmatter.title}`}</title>\n            <meta\n              name=\"description\"\n              content={`${post.frontmatter.description}`}\n            />\n          </Helmet>\n        }\n        tags={post.frontmatter.tags}\n        attachments={post.frontmatter.attachments}\n        title={post.frontmatter.title}\n      />\n    </Layout>\n  );\n};\n\nNotificationsPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object,\n  }),\n};\n\nexport default NotificationsPost;\n\nexport const pageQuery = graphql`\n  query NotificationsPostByID($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        attachments {\n          name\n          url\n        }\n        tags\n      }\n    }\n  }\n`;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}