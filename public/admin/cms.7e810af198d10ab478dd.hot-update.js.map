{"version":3,"file":"cms.7e810af198d10ab478dd.hot-update.js","sources":["webpack:///./src/templates/index-page.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Slider from \"react-slick\";\nimport PropTypes from \"prop-types\";\nimport { Link, graphql } from \"gatsby\";\nimport Helmet from \"react-helmet\";\nimport isAfter from \"date-fns/is_after\";\n\nimport Layout from \"../components/Layout\";\nimport HeadshotPlaceholder from \"../img/headshot-placeholder.svg\";\nimport CustomLink from \"../components/CustomLink\";\nimport \"../styles/home.scss\";\nimport PreviewCompatibleImage from \"../components/PreviewCompatibleImage\";\nimport TrainingRoll from \"../components/TrainingRoll\";\nimport NotificationsRoll from \"../components/NotificationsRoll\";\nimport NewsRoll from \"../components/NewsRoll\";\nimport GameRoll from \"../components/GameRoll\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nexport const HomePageTemplate = ({ home, upcomingGame = null }) => {\n  // const [curTab, setCurTab] = useState(\"1\");\n\n  // const events = upcomingGame && upcomingGame.events;\n  // const latitude =\n  //   upcomingGame && parseFloat(upcomingGame.location.mapsLatitude);\n  // const longitude =\n  //   upcomingGame && parseFloat(upcomingGame.location.mapsLongitude);\n\n  let settings = {\n    dots: false,\n    arrows: false,\n    autoplay: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n  };\n\n  const renderCard = (item) => (\n    <section className=\"notificationsAndNews section columns is-multiline\">\n      {item &&\n        item.map((galleryImage, index) => (\n          <div className=\"is-parent column is-4\" key={index}>\n            <Link\n              className=\"title has-text-primary is-size-4\"\n              to={galleryImage.url}\n            >\n              <div\n                style={{\n                  witdh: \"100%\",\n                  height: 350,\n                  backgroundImage: `url('${galleryImage.image}')`,\n                  backgroundSize: \"cover\",\n                }}\n              >\n                {/* <PreviewCompatibleImage imageInfo={galleryImage}> */}\n                <p className=\"notificationsAndNews-title\">\n                  {galleryImage.name}\n                </p>\n                {/* </PreviewCompatibleImage> */}\n              </div>\n            </Link>\n          </div>\n        ))}\n    </section>\n  );\n\n  // const renderInfo = () => {\n  //   if (curTab === \"1\") {\n  //     return <NewsRoll />;\n  //   } else {\n  //     return <NotificationsRoll />;\n  //   }\n  // };\n  return (\n    <>\n      <section className=\"header\">\n        <div className=\"header-container\">\n          <Slider {...settings} style={{ width: \"100vw\" }}>\n            {home.headerCarousel.gallery.map((galleryImage, index) => (\n              <div key={index} className={`item-${index}`}>\n                <PreviewCompatibleImage imageInfo={galleryImage} />\n              </div>\n            ))}\n          </Slider>\n        </div>\n      </section>\n      {/* <section className=\"notificationsAndNews section \">\n        <div className=\"container columns\">\n          <Slider\n            {...settings}\n            className=\"is-parent column is-7 notificationsAndNews-container container\"\n          >\n            {home.headerCarousel.gallery.map((galleryImage, index) => (\n              <div key={index} className={`item-${index}`}>\n                <PreviewCompatibleImage imageInfo={galleryImage} />\n              </div>\n            ))}\n          </Slider>\n          <div className=\"column is-5 notificationsAndNews-container container\">\n            <div className=\"column is-12\">\n              <div className=\"news-title-container\">\n                <Link className=\"subtitle is-5 news-title-item\" to=\"/news\">\n                  <h3\n                    className={`notificationsAndNews-pointer-title is-size-2 ${\n                      curTab === \"1\" ? \"active\" : \"\"\n                    }`}\n                    onMouseEnter={() => {\n                      setCurTab(\"1\");\n                    }}\n                  >\n                    资讯\n                  </h3>\n                </Link>\n                <Link\n                  className=\"subtitle is-5 news-title-item\"\n                  to=\"/notifications\"\n                >\n                  <h3\n                    className={`notificationsAndNews-pointer-title is-size-2 ${\n                      curTab === \"2\" ? \"active\" : \"\"\n                    }`}\n                    onMouseEnter={() => {\n                      setCurTab(\"2\");\n                    }}\n                  >\n                    通告\n                  </h3>\n                </Link>\n              </div>\n              {renderInfo()}\n            </div>\n          </div>\n        </div>\n      </section> */}\n      {/* <section className=\"upcomingGame  section\">\n        <div className=\"upcomingGame-container  container\">\n          <h2 className=\"upcomingGame-title\">{home.upcomingGameHeading}</h2>\n          {upcomingGame ? (\n            <>\n              <p className=\"upcomingGame-detail  upcomingGame-detail--date\">\n                <span className=\"upcomingGame-detailLabel\">Date: </span>\n                {upcomingGame.formattedDate}\n              </p>\n              <p className=\"upcomingGame-detail  upcomingGame-detail--location\">\n                <span className=\"upcomingGame-detailLabel\">Location: </span>\n                {upcomingGame.location.name}\n              </p>\n              {events.length > 0 && (\n                <div className=\"upcomingGame-events\">\n                  {events.map((presenter) => (\n                    <div\n                      className=\"upcomingGame-presenter\"\n                      key={presenter.text}\n                    >\n                      <div\n                        style={{ width: \"300px\", height: \"auto\" }}\n                        className=\"upcomingGame-presenterImage\"\n                      >\n                        <PreviewCompatibleImage\n                          className=\"upcomingGame-presenterImage\"\n                          imageInfo={presenter.image}\n                        />\n                      </div>\n                      <span className=\"upcomingGame-presenterName\">\n                        {presenter.name}\n                      </span>\n                      <span className=\"upcomingGame-presenterPresentationTitle\">\n                        {presenter.eventDescription}\n                      </span>\n                      <p className=\"upcomingGame-presenterDescription\">\n                        {presenter.text}\n                      </p>\n                    </div>\n                  ))}\n                </div>\n              )}\n              <p className=\"upcomingGame-mapNote\">{home.mapsNote}</p>\n              <div className=\"upcomingGame-mapWrapper\">\n                <Map\n                  isMarkerShown\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBTxauB_VWpo0_8hWELlE3pN59uuHzxD-8&v=3.exp&libraries=geometry,drawing,places\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={<div style={{ height: `100%` }} />}\n                  mapElement={<div style={{ height: `100%` }} />}\n                  link={upcomingGame.location.mapsLink}\n                  latitude={latitude}\n                  longitude={longitude}\n                />\n              </div>\n            </>\n          ) : (\n            <p className=\"upcomingGame-detail\">{home.noUpcomingGameText}</p>\n          )}\n        </div>\n      </section> */}\n      {/* <section className=\"ctaBlock\">\n        <CustomLink\n          linkType={home.callToActions.firstCTA.linkType}\n          linkURL={home.callToActions.firstCTA.linkURL}\n          className=\"ctaBlock-pattern  ctaBlock-pattern--first\"\n        >\n          <div className=\"ctaBlock-cta\">\n            <span className=\"ctaBlock-ctaHeading\">\n              {home.callToActions.firstCTA.heading}\n            </span>\n            <p className=\"ctaBlock-ctaDescription\">\n              {home.callToActions.firstCTA.subHeading}\n            </p>\n          </div>\n        </CustomLink>\n        <CustomLink\n          linkType={home.callToActions.secondCTA.linkType}\n          linkURL={home.callToActions.secondCTA.linkURL}\n          className=\"ctaBlock-pattern  ctaBlock-pattern--second\"\n        >\n          <div className=\"ctaBlock-cta\">\n            <span className=\"ctaBlock-ctaHeading\">\n              {home.callToActions.secondCTA.heading}\n            </span>\n            <p className=\"ctaBlock-ctaDescription\">\n              {home.callToActions.secondCTA.subHeading}\n            </p>\n          </div>\n        </CustomLink>\n      </section> */}\n      {renderCard(home.newsNotifications.gallery)}\n      {/* <section className=\"notificationsAndNews section columns is-multiline\">\n        {home.newsNotifications.gallery &&\n          home.newsNotifications.gallery.map((galleryImage, index) => (\n            <div className=\"is-parent column is-4\" key={index}>\n              <Link\n                className=\"title has-text-primary is-size-4\"\n                to={galleryImage.url}\n              >\n                <article className=\"training-list-item tile is-child box notification\">\n                  <div className=\"featured-thumbnail\">\n                    <PreviewCompatibleImage imageInfo={galleryImage} />\n                  </div>\n                  <p className=\"post-meta\">{galleryImage.name}</p>\n                </article>\n              </Link>\n            </div>\n          ))}\n      </section> */}\n      <section className=\"notificationsAndNews section\">\n        <Slider {...settings} style={{ width: \"100vw\" }}>\n          {home.centerCarousel.gallery.map((galleryImage, index) => (\n            <div key={index} className={`item-${index}`}>\n              <PreviewCompatibleImage imageInfo={galleryImage} />\n            </div>\n          ))}\n        </Slider>\n      </section>\n      {/* <section className=\"games section\">\n        <div className=\"game-container columns container\">\n          <div className=\"column is-12\">\n            <h3 className=\"games-title has-text-weight-semibold is-size-2\">\n              赛事活动\n            </h3>\n            <GameRoll />\n            <div className=\"column is-12 has-text-centered\">\n              <Link className=\"btn\" to=\"/notifications\">\n                更多赛事\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section> */}\n      {/* <section className=\"trainings  section\">\n        <div className=\"training-container columns container\">\n          <div className=\"column is-12\">\n            <h3 className=\"trainings-title has-text-weight-semibold is-size-2\">\n              培训认证\n            </h3>\n            <TrainingRoll />\n            <div className=\"column is-12 has-text-centered\">\n              <Link className=\"btn\" to=\"/training\">\n                更多培训\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section> */}\n      {renderCard(home.educations.gallery)}\n      <section className=\"cooperation section\">\n        <h2 className=\"cooperation-title\">{home.cooperation.title}</h2>\n        <div className=\"cooperation-container\">\n          <div className=\"cooperation-list\">\n            {home.cooperation.gallery.map((galleryImage, index) => (\n              <div key={index} className=\"cooperation-list-item\">\n                <PreviewCompatibleImage imageInfo={galleryImage} />\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nclass HomePage extends React.Component {\n  render() {\n    const { data } = this.props;\n    const {\n      data: { footerData, navbarData },\n    } = this.props;\n    const { frontmatter: home } = data.homePageData.edges[0].node;\n    const {\n      seo: { title: seoTitle, description: seoDescription, browserTitle },\n    } = home;\n    let upcomingGame = null;\n    // Find the next meetup that is closest to today\n    data.allMarkdownRemark.edges.every((item) => {\n      const { frontmatter: meetup } = item.node;\n      if (isAfter(meetup.rawDate, new Date())) {\n        upcomingGame = meetup;\n        return true;\n      } else {\n        return false;\n      }\n    });\n    return (\n      <Layout footerData={footerData} navbarData={navbarData}>\n        <Helmet>\n          <meta name=\"title\" content={seoTitle} />\n          <meta name=\"description\" content={seoDescription} />\n          <title>{browserTitle}</title>\n        </Helmet>\n        <HomePageTemplate home={home} upcomingGame={upcomingGame} />\n      </Layout>\n    );\n  }\n}\n\nHomePage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n};\n\nexport default HomePage;\n\nexport const pageQuery = graphql`\n  query HomePageQuery {\n    allMarkdownRemark(\n      filter: { frontmatter: { events: { elemMatch: { text: { ne: null } } } } }\n      sort: { order: DESC, fields: frontmatter___date }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            formattedDate: date(formatString: \"MMMM Do YYYY @ h:mm A\")\n            rawDate: date\n            events {\n              name\n              image\n              text\n              eventDescription\n            }\n            location {\n              mapsLatitude\n              mapsLongitude\n              mapsLink\n              name\n            }\n          }\n        }\n      }\n    }\n    homePageData: allMarkdownRemark(\n      filter: { frontmatter: { templateKey: { eq: \"index-page\" } } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            headerImage {\n              image {\n                childImageSharp {\n                  fluid(maxWidth: 2048, quality: 100) {\n                    ...GatsbyImageSharpFluid\n                  }\n                }\n              }\n              imageAlt\n            }\n            headerCarousel {\n              title\n              gallery {\n                image\n                imageAlt\n                name\n                url\n              }\n            }\n            newsNotifications {\n              title\n              gallery {\n                image\n                imageAlt\n                name\n                url\n              }\n            }\n            centerCarousel {\n              title\n              gallery {\n                image\n                imageAlt\n                name\n                url\n              }\n            }\n            educations {\n              title\n              gallery {\n                image\n                imageAlt\n                name\n                url\n              }\n            }\n            cooperation {\n              title\n              gallery {\n                image\n                imageAlt\n                name\n              }\n            }\n            seo {\n              browserTitle\n              title\n              description\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfA;AAHA;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAsKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAsCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAUA;AACA;AACA;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;;;;;;;AAhCA;AACA;AAiCA;AACA;AACA;AACA;AADA;AADA;AADA;AAQA;AAAA;AAEA;;;;;;;;;;AAtUA;AA0RA;AA4CA;;;;;;;;;;;;;;A","sourceRoot":""}