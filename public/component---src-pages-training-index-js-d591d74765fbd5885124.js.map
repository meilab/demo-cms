{"version":3,"sources":["webpack:///./src/pages/training/index.js","webpack:///./src/components/TrainingRoll.js"],"names":["TrainingIndexPage","render","className","style","backgroundImage","boxShadow","backgroundColor","color","padding","React","Component","TrainingRoll","posts","data","allMarkdownRemark","edges","map","post","node","key","id","to","fields","slug","frontmatter","featuredpost","featuredimage","imageInfo","image","alt","title","description","query","count"],"mappings":"0MAKqBA,E,kGACnBC,OAAA,WACE,OACE,kBAAC,IAAD,KACE,yBACEC,UAAU,0CACVC,MAAO,CACLC,gBAAgB,+BAGlB,wBACEF,UAAU,iCACVC,MAAO,CACLE,UAAW,oCACXC,gBAAiB,OACjBC,MAAO,QACPC,QAAS,SANb,UAYF,6BAASN,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,W,GAzBiCO,IAAMC,Y,kCCLrD,iDAKA,SAASC,EAAT,GAAiC,IAChBC,EADe,EAARC,KACQC,kBAAtBC,MAER,OACE,yBAAKb,UAAU,wBACZU,GACCA,EAAMI,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACR,yBAAKhB,UAAU,wBAAwBiB,IAAKF,EAAKG,IAC/C,kBAAC,IAAD,CACElB,UAAU,mCACVmB,GAAIJ,EAAKK,OAAOC,MAEhB,6BACErB,UAAS,sDACPe,EAAKO,YAAYC,aAAe,cAAgB,KAGjDR,EAAKO,YAAYE,cAChB,yBAAKxB,UAAU,sBACb,kBAAC,IAAD,CACEyB,UAAW,CACTC,MAAOX,EAAKO,YAAYE,cACxBG,IAAI,qCAAsCZ,EAAKO,YAAYM,UAI/D,KACJ,uBAAG5B,UAAU,aACRe,EAAKO,YAAYM,MAElB,0BAAM5B,UAAU,+BACbe,EAAKO,YAAYO,qBAmBzB,sBACb,kBAAC,IAAD,CACEC,MAAK,aAgCL/B,OAAQ,SAACY,EAAMoB,GAAP,OAAiB,kBAACtB,EAAD,CAAcE,KAAMA,EAAMoB,MAAOA","file":"component---src-pages-training-index-js-d591d74765fbd5885124.js","sourcesContent":["import React from \"react\";\n\nimport Layout from \"../../components/Layout\";\nimport TrainingRoll from \"../../components/TrainingRoll\";\n\nexport default class TrainingIndexPage extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <div\n          className=\"full-width-image-container margin-top-0\"\n          style={{\n            backgroundImage: `url('/img/blog-index.jpg')`,\n          }}\n        >\n          <h1\n            className=\"has-text-weight-bold is-size-1\"\n            style={{\n              boxShadow: \"0.5rem 0 0 #f40, -0.5rem 0 0 #f40\",\n              backgroundColor: \"#f40\",\n              color: \"white\",\n              padding: \"1rem\",\n            }}\n          >\n            我们的故事\n          </h1>\n        </div>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <TrainingRoll />\n            </div>\n          </div>\n        </section>\n      </Layout>\n    );\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql, StaticQuery } from 'gatsby'\nimport PreviewCompatibleImage from './PreviewCompatibleImage'\n\nfunction TrainingRoll({ data }) {\n  const { edges: posts } = data.allMarkdownRemark\n\n  return (\n    <div className=\"columns is-multiline\">\n      {posts &&\n        posts.map(({ node: post }) => (\n          <div className=\"is-parent column is-4\" key={post.id}>\n            <Link\n              className=\"title has-text-primary is-size-4\"\n              to={post.fields.slug}\n            >\n              <article\n                className={`training-list-item tile is-child box notification ${\n                  post.frontmatter.featuredpost ? 'is-featured' : ''\n                }`}\n              >\n                {post.frontmatter.featuredimage ? (\n                  <div className=\"featured-thumbnail\">\n                    <PreviewCompatibleImage\n                      imageInfo={{\n                        image: post.frontmatter.featuredimage,\n                        alt: `featured image thumbnail for post ${post.frontmatter.title}`,\n                      }}\n                    />\n                  </div>\n                ) : null}\n                <p className=\"post-meta\">\n                    {post.frontmatter.title}\n                    {/* <span> &bull; </span> */}\n                    <span className=\"subtitle is-size-5 is-block\">\n                      {post.frontmatter.description}\n                    </span>\n                </p>\n              </article>\n            </Link>\n          </div>\n        ))}\n    </div>\n  )\n}\n\nTrainingRoll.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query TrainingRollQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { frontmatter: { templateKey: { eq: \"training-post\" } } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 400)\n              id\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                templateKey\n                date(formatString: \"MMMM DD, YYYY\")\n                featuredpost\n                description\n                featuredimage {\n                  childImageSharp {\n                    fluid(maxWidth: 120, quality: 100) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data, count) => <TrainingRoll data={data} count={count} />}\n  />\n)\n"],"sourceRoot":""}