{"version":3,"sources":["webpack:///./src/components/AthleteRoll.js","webpack:///./src/pages/athlete/index.js"],"names":["AthleteRoll","data","posts","allMarkdownRemark","edges","useState","filteredData","setFilteredData","setQuery","useEffect","className","length","type","aria-label","placeholder","onChange","event","newQuery","target","value","filter","post","node","frontmatter","description","name","number","tags","toLowerCase","includes","toString","join","map","key","id","featuredpost","featuredimage","PreviewCompatibleImage","imageInfo","image","alt","to","fields","slug","date","excerpt","query","render","count","TrainingIndexPage","Layout","style","backgroundImage","boxShadow","backgroundColor","color","padding","React","Component"],"mappings":"mNAKA,SAASA,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACNC,EAAUD,EAAKE,kBAAtBC,MADqB,EAIWC,mBAAS,IAA1CC,EAJsB,KAIRC,EAJQ,OAKHF,mBAFP,IAELG,GALe,WAO7BC,qBAAU,WACRF,EAAgBL,KACf,IA6BH,OACE,yBAAKQ,UAAU,aACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,cACb,uBAAGA,UAAU,iBACX,gCAASJ,EAAaK,QADxB,SAIF,yBAAKD,UAAU,cACb,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,WACX,2BACEA,UAAU,QACVE,KAAK,OACLC,aAAW,SACXC,YAAY,UACZC,SA5CU,SAACC,GACzB,IAAMC,EAAWD,EAAME,OAAOC,MAExBjB,EAAQD,EAAKE,kBAAkBC,OAAS,GAExCE,EAbW,KAcfW,EACIf,EACAA,EAAMkB,QAAO,SAACC,GAAS,MAEuBA,EAAKC,KAAKC,YAA9CC,EAFa,EAEbA,YAAaC,EAFA,EAEAA,KAAMC,EAFN,EAEMA,OAAQC,EAFd,EAEcA,KACnC,OAIEH,EAAYI,cAAcC,SAASZ,EAASW,gBAC5CH,EAAKG,cAAcC,SAASZ,EAASW,gBACrCF,EAAOI,WAAWF,cAAcC,SAASZ,EAASW,gBACjDD,GACCA,EAAKI,KAAK,IAAIH,cAAcC,SAASZ,EAASW,kBAI1DrB,EAAgBD,GAChBE,EAASS,OAuBC,uBAAGP,UAAU,WACX,4BAAQA,UAAU,UAAlB,WAQV,yBAAKA,UAAU,wBACZJ,GACCA,EAAa0B,KAAI,gBAASX,EAAT,EAAGC,KAAH,OACf,yBAAKZ,UAAU,wBAAwBuB,IAAKZ,EAAKa,IAC/C,6BACExB,UAAS,sDACPW,EAAKE,YAAYY,aAAe,cAAgB,KAGlD,gCACGd,EAAKE,YAAYa,cAChB,yBAAK1B,UAAU,sBACb,kBAAC2B,EAAA,EAAD,CACEC,UAAW,CACTC,MAAOlB,EAAKE,YAAYa,cACxBI,IAAI,wCAAyCnB,EAAKE,YAAYE,SAIlE,KACJ,uBAAGf,UAAU,aACX,kBAAC,IAAD,CACEA,UAAU,mCACV+B,GAAIpB,EAAKqB,OAAOC,MAEftB,EAAKE,YAAYE,MAEpB,qCACA,0BAAMf,UAAU,+BACbW,EAAKE,YAAYqB,QAIxB,2BACGvB,EAAKwB,QACN,6BACA,6BACA,kBAAC,IAAD,CAAMnC,UAAU,SAAS+B,GAAIpB,EAAKqB,OAAOC,MAAzC,kBAoBH,wBACb,kBAAC,IAAD,CACEG,MAAK,aAkCLC,OAAQ,SAAC9C,EAAM+C,GAAP,OAAiB,kBAAChD,EAAD,CAAaC,KAAMA,EAAM+C,MAAOA,QChKxCC,E,kGACnBF,OAAA,WACE,OACE,kBAACG,EAAA,EAAD,KACE,yBACExC,UAAU,0CACVyC,MAAO,CACLC,gBAAgB,+BAGlB,wBACE1C,UAAU,iCACVyC,MAAO,CACLE,UAAW,oCACXC,gBAAiB,OACjBC,MAAO,QACPC,QAAS,SANb,cAYF,6BAAS9C,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,W,GAzBiC+C,IAAMC","file":"component---src-pages-athlete-index-js-3a704f8bdbe578b32390.js","sourcesContent":["import React, { Component, Fragment, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, graphql, StaticQuery } from \"gatsby\";\nimport PreviewCompatibleImage from \"./PreviewCompatibleImage\";\n\nfunction AthleteRoll({ data }) {\n  const { edges: posts } = data.allMarkdownRemark;\n\n  const emptyQuery = \"\";\n  const [filteredData, setFilteredData] = useState([]);\n  const [query, setQuery] = useState(emptyQuery);\n\n  useEffect(() => {\n    setFilteredData(posts);\n  }, []);\n\n  const handleInputChange = (event) => {\n    const newQuery = event.target.value;\n    // this is how we get all of our posts\n    const posts = data.allMarkdownRemark.edges || [];\n    // return all filtered posts\n    const filteredData =\n      newQuery === emptyQuery\n        ? posts\n        : posts.filter((post) => {\n            // destructure data from post frontmatter\n            const { description, name, number, tags } = post.node.frontmatter;\n            return (\n              // standardize data with .toLowerCase()\n              // return true if the description, name or tags\n              // contains the newQuery string\n              description.toLowerCase().includes(newQuery.toLowerCase()) ||\n              name.toLowerCase().includes(newQuery.toLowerCase()) ||\n              number.toString().toLowerCase().includes(newQuery.toLowerCase()) ||\n              (tags &&\n                tags.join(\"\").toLowerCase().includes(newQuery.toLowerCase()))\n            );\n          });\n    // update state according to the latest newQuery and results\n    setFilteredData(filteredData);\n    setQuery(newQuery);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"level\">\n        <div className=\"level-left\">\n          <div className=\"level-item\">\n            <p className=\"subtitle is-5\">\n              <strong>{filteredData.length}</strong> 运动员\n            </p>\n          </div>\n          <div className=\"level-item\">\n            <div className=\"field has-addons\">\n              <p className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  aria-label=\"Search\"\n                  placeholder=\"输入姓名或编号\"\n                  onChange={handleInputChange}\n                />\n              </p>\n              <p className=\"control\">\n                <button className=\"button\">\n                  搜索\n                </button>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"columns is-multiline\">\n        {filteredData &&\n          filteredData.map(({ node: post }) => (\n            <div className=\"is-parent column is-6\" key={post.id}>\n              <article\n                className={`training-list-item tile is-child box notification ${\n                  post.frontmatter.featuredpost ? \"is-featured\" : \"\"\n                }`}\n              >\n                <header>\n                  {post.frontmatter.featuredimage ? (\n                    <div className=\"featured-thumbnail\">\n                      <PreviewCompatibleImage\n                        imageInfo={{\n                          image: post.frontmatter.featuredimage,\n                          alt: `featured image thumbnail for athlete ${post.frontmatter.name}`,\n                        }}\n                      />\n                    </div>\n                  ) : null}\n                  <p className=\"post-meta\">\n                    <Link\n                      className=\"title has-text-primary is-size-4\"\n                      to={post.fields.slug}\n                    >\n                      {post.frontmatter.name}\n                    </Link>\n                    <span> &bull; </span>\n                    <span className=\"subtitle is-size-5 is-block\">\n                      {post.frontmatter.date}\n                    </span>\n                  </p>\n                </header>\n                <p>\n                  {post.excerpt}\n                  <br />\n                  <br />\n                  <Link className=\"button\" to={post.fields.slug}>\n                    阅读更多 →\n                  </Link>\n                </p>\n              </article>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n}\n\nAthleteRoll.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n};\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query AthleteRollQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { frontmatter: { templateKey: { eq: \"athlete-info\" } } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 400)\n              id\n              fields {\n                slug\n              }\n              frontmatter {\n                name\n                number\n                description\n                tags\n                templateKey\n                date(formatString: \"MMMM DD, YYYY\")\n                featuredpost\n                featuredimage {\n                  childImageSharp {\n                    fluid(maxWidth: 120, quality: 100) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data, count) => <AthleteRoll data={data} count={count} />}\n  />\n);\n","import React from \"react\";\n\nimport Layout from \"../../components/Layout\";\nimport AthleteRoll from \"../../components/AthleteRoll\";\n\nexport default class TrainingIndexPage extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <div\n          className=\"full-width-image-container margin-top-0\"\n          style={{\n            backgroundImage: `url('/img/blog-index.jpg')`,\n          }}\n        >\n          <h1\n            className=\"has-text-weight-bold is-size-1\"\n            style={{\n              boxShadow: \"0.5rem 0 0 #f40, -0.5rem 0 0 #f40\",\n              backgroundColor: \"#f40\",\n              color: \"white\",\n              padding: \"1rem\",\n            }}\n          >\n            瑜伽成就更好的自己\n          </h1>\n        </div>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <AthleteRoll />\n            </div>\n          </div>\n        </section>\n      </Layout>\n    );\n  }\n}\n"],"sourceRoot":""}